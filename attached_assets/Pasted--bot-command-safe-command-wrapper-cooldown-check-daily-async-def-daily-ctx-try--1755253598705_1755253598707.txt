@bot.command()
@safe_command_wrapper
@cooldown_check('daily')
async def daily(ctx):
    try:
        user_id = str(ctx.author.id)
        now = datetime.datetime.now(timezone.utc)
        user_data = get_user_data(user_id)

        last_claim = user_data.get("last_daily")     # renamed field
        streak = user_data.get("daily_streak", 0)
        base_reward = 300

        # ── role bonus ─────────────────────────────────────────────
        role_ids = [r.id for r in ctx.author.roles]
        if ROLE_ID_ADMIN in role_ids:
            base_reward, role_bonus = 400, "👑 **ADMIN BLESSING** `+100 SP`"
        elif ROLE_ID_HMW in role_ids:
            base_reward, role_bonus = 350, "⚡ **HMW PRIVILEGE** `+50 SP`"
        elif ROLE_ID_BOOSTER in role_ids:
            base_reward, role_bonus = 350, "💎 **BOOSTER BONUS** `+50 SP`"
        else:
            role_bonus = "🔰 **STANDARD RATE**"

        # ── cooldown / streak calc ────────────────────────────────
        if last_claim:
            try:
                last_time = datetime.datetime.fromisoformat(last_claim)
                if last_time.tzinfo is None:
                    last_time = last_time.replace(tzinfo=timezone.utc)
            except ValueError:                                      # legacy format
                last_time = datetime.datetime.strptime(
                    last_claim, "%Y-%m-%d %H:%M:%S.%f"
                ).replace(tzinfo=timezone.utc)

            if (now - last_time).days == 0:
                remaining = 24 - (now - last_time).seconds // 3600
                embed = discord.Embed(
                    title="⏰ **TEMPORAL LOCK ACTIVE**",
                    description=f"``````",
                    color=0x2B2D42,
                )
                embed.set_footer(text="Daily energy re-charging …")
                await light_safe_api_call(ctx.send, embed=embed)
                return
            elif (now - last_time).days == 1:
                streak += 1
            else:
                streak = 1
        else:
            streak = 1

        # ── reward & state update ─────────────────────────────────
        reward = base_reward * 2 if streak == 5 else base_reward
        if streak == 5:                                             # reset on payout
            streak = 0

        old_sp = user_data.get("sp", 0)
        new_sp = old_sp + reward
        await update_user_data(
            user_id,
            sp=new_sp,
            last_daily=now.isoformat(),
            daily_streak=streak,
        )
        log_transaction(
            user_id, "daily_claim", reward, old_sp, new_sp,
            f"Daily claim • {role_bonus}"
        )

        # ── embed output ──────────────────────────────────────────
        bar = ''.join('🟩' if i < streak else '🟥' for i in range(5))

        embed = discord.Embed(
            title="⚡ **DAILY ENERGY HARVESTED** ⚡",
            description=f"``````",
            color=0x8A2BE2 if streak >= 3 else 0x4169E1,
        )
        embed.add_field(
            name="🎁 **REWARD BREAKDOWN**",
            value=f"{role_bonus}",
            inline=False,
        )
        embed.add_field(
            name="🔥 **STREAK**",
            value=f"{bar}  `{streak}/5`",
            inline=False,
        )
        embed.add_field(
            name="💰 **NEW SP BALANCE**",
            value=f"`{new_sp:,} SP`",
            inline=False,
        )
        embed.set_thumbnail(url=ctx.author.avatar.url if ctx.author.avatar else None)
        embed.set_footer(
            text="Next claim in 24 h",
            icon_url=ctx.guild.icon.url if ctx.guild.icon else None,
        )
        await safe_api_call(ctx.send, embed=embed)

    except Exception as e:
        logger.error(f"daily() error: {e}")
        await light_safe_api_call(
            ctx.send,
            "❌ An error occurred while processing your daily claim."
        )